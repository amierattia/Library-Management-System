@{
    ViewData["Title"] = "Admin Dashboard";
    ViewData["SelectedController"] = "Dashboard";
    var totalBooks = ViewData["Books"] ?? 0;
    var totalStudents = ViewData["Students"] ?? 0;
    var totalBorrows = ViewData["Borrows"] ?? 0;
    var tableData = ViewData["TableData"] ?? new List<object>();
    var selectedController = ViewData["TableController"]?.ToString() ?? "Books";
    Layout = "_DashboardLayout";
}

<div class="w-full">
    <h1 class="text-4xl font-bold text-gray-900 mb-10">Admin Dashboard</h1>

    <!-- Stats and Chart Section -->
    <div class="grid grid-cols-1 lg:grid-cols-4 gap-8 mb-12">
        <!-- Stats Cards -->
        <div class="lg:col-span-3 grid grid-cols-1 sm:grid-cols-3 gap-6">
            <div class="bg-white rounded-3xl shadow-xl p-5 transform hover:scale-102 transition-all duration-500">
                <div class="flex items-center space-x-4">
                    <svg class="h-8 w-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                    </svg>
                    <div>
                        <p class="text-gray-600 text-xs uppercase tracking-wider">Total Books</p>
                        <p class="text-2xl font-bold text-blue-600">@totalBooks</p>
                    </div>
                </div>
            </div>
            <div class="bg-white rounded-3xl shadow-xl p-5 transform hover:scale-102 transition-all duration-500">
                <div class="flex items-center space-x-4">
                    <svg class="h-8 w-8 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 14l9-5-9-5-9 5 9 5zm0 7l-9-5 9-5 9 5-9 5z" />
                    </svg>
                    <div>
                        <p class="text-gray-600 text-xs uppercase tracking-wider">Total Students</p>
                        <p class="text-2xl font-bold text-blue-500">@totalStudents</p>
                    </div>
                </div>
            </div>
            <div class="bg-white rounded-3xl shadow-xl p-5 transform hover:scale-102 transition-all duration-500">
                <div class="flex items-center space-x-4">
                    <svg class="h-8 w-8 text-blue-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4" />
                    </svg>
                    <div>
                        <p class="text-gray-600 text-xs uppercase tracking-wider">Borrow Records</p>
                        <p class="text-2xl font-bold text-blue-700">@totalBorrows</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Chart -->
        <div class="bg-white rounded-3xl shadow-xl p-8">
            <h3 class="text-xl font-semibold text-gray-800 mb-6">Library Statistics</h3>
            <canvas id="libraryChart" class="w-full h-80"></canvas>
        </div>
    </div>

    <!-- Data Table -->
    <div class="bg-white rounded-3xl shadow-xl p-8 overflow-x-auto">
        <h3 class="text-xl font-semibold text-gray-800 mb-6">@selectedController Data</h3>
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-blue-50">
                <tr>
                    @if (selectedController == "Students")
                    {
                        <th class="px-6 py-4 text-left text-xs font-medium text-gray-600 uppercase tracking-wider">Name</th>
                        <th class="px-6 py-4 text-left text-xs font-medium text-gray-600 uppercase tracking-wider">Email</th>
                        <th class="px-6 py-4 text-left text-xs font-medium text-gray-600 uppercase tracking-wider">Phone</th>
                    }
                    else if (selectedController == "Books")
                    {
                        <th class="px-6 py-4 text-left text-xs font-medium text-gray-600 uppercase tracking-wider">Title</th>
                        <th class="px-6 py-4 text-left text-xs font-medium text-gray-600 uppercase tracking-wider">Author</th>
                        <th class="px-6 py-4 text-left text-xs font-medium text-gray-600 uppercase tracking-wider">ISBN</th>
                        <th class="px-6 py-4 text-left text-xs font-medium text-gray-600 uppercase tracking-wider">Quantity</th>
                    }
                    else if (selectedController == "BorrowRecords")
                    {
                        <th class="px-6 py-4 text-left text-xs font-medium text-gray-600 uppercase tracking-wider">Student</th>
                        <th class="px-6 py-4 text-left text-xs font-medium text-gray-600 uppercase tracking-wider">Book</th>
                        <th class="px-6 py-4 text-left text-xs font-medium text-gray-600 uppercase tracking-wider">Borrow Date</th>
                        <th class="px-6 py-4 text-left text-xs font-medium text-gray-600 uppercase tracking-wider">Return Date</th>
                    }
                    <th class="px-6 py-4 text-right text-xs font-medium text-gray-600 uppercase tracking-wider">Actions</th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-100">
                @foreach (var item in (IEnumerable<object>)tableData)
                {
                    <tr class="hover:bg-blue-50 transition-all duration-300">
                     
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800">@(item.GetType().GetProperty("Title")?.GetValue(item))</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800">@(item.GetType().GetProperty("Author")?.GetValue(item))</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800">@(item.GetType().GetProperty("ISBN")?.GetValue(item))</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800">@(item.GetType().GetProperty("Quantity")?.GetValue(item))</td>
                     
                        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                            <a href="/@selectedController/Edit/@(item.GetType().GetProperty(selectedController + "Id")?.GetValue(item))" class="inline-flex items-center p-2 text-blue-600 hover:text-blue-800 rounded-full hover:bg-blue-100 transition">
                                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15.828l-5.657 1.414 1.414-5.657L18.414 2.586z" />
                                </svg>
                            </a>
                            <a href="/@selectedController/Details/@(item.GetType().GetProperty(selectedController + "Id")?.GetValue(item))" class="inline-flex items-center p-2 text-blue-600 hover:text-blue-800 rounded-full hover:bg-blue-100 transition">
                                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                                </svg>
                            </a>
                            <a href="/@selectedController/Delete/@(item.GetType().GetProperty(selectedController + "Id")?.GetValue(item))" class="inline-flex items-center p-2 text-red-600 hover:text-red-800 rounded-full hover:bg-red-100 transition">
                                <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5-4h4a1 1 0 011 1v1H9V4a1 1 0 011-1z" />
                                </svg>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var ctx = document.getElementById('libraryChart').getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Books', 'Students', 'Borrow Records'],
                    datasets: [{
                        label: 'Library Statistics',
                        data: [@totalBooks, @totalStudents, @totalBorrows],
                        backgroundColor: ['#2563EB', '#3B82F6', '#1D4ED8'],
                        borderColor: ['#1E40AF', '#1E40AF', '#1E40AF'],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: '#E5E7EB'
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            backgroundColor: '#1F2937',
                            titleFont: { size: 14 },
                            bodyFont: { size: 12 }
                        }
                    },
                    animation: {
                        duration: 1000,
                        easing: 'easeOutQuart'
                    }
                }
            });
        });
    </script>
}